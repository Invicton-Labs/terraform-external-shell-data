name: "CICD_v2"

on: [push, pull_request]

jobs:
  Linux:
    strategy:
      fail-fast: false
      matrix:
        image: [
          "alpine:latest", 
          "redhat/ubi9:latest",
          "fedora:latest", 
          "centos:latest",
          "ubuntu:latest"
        ]
        tf_version: [
          "1.2.0",
          # "1.1.0",
          # "1.0.0",
          # "0.14.0",
          # "0.13.0",
          # "0.12.0",
        ]

    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
      volumes:
        - ${{ github.workspace }}:/workspace
    
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Terraform (Alpine)
        if: startsWith(matrix.image, 'alpine:')
        run: |
          apk add --no-cache git
          wget https://releases.hashicorp.com/terraform/${{ matrix.tf_version }}/terraform_${{ matrix.tf_version }}_linux_amd64.zip
          unzip terraform_${{ matrix.tf_version }}_linux_amd64.zip
          mv terraform /usr/bin/terraform
          
      - name: Install Terraform (Redhat/CentOS)
        if: startsWith(matrix.image, 'redhat/') || startsWith(matrix.image, 'centos/')
        run: |
          yum install -y yum-utils git
          yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
          yum -y install terraform-${{ matrix.tf_version }}

      - name: Install Terraform (Fedora)
        if: startsWith(matrix.image, 'fedora:')
        run: |
          dnf install -y dnf-plugins-core git
          dnf config-manager --add-repo https://rpm.releases.hashicorp.com/fedora/hashicorp.repo
          dnf -y install terraform-${{ matrix.tf_version }}

      - name: Install Terraform (Ubuntu)
        if: startsWith(matrix.image, 'ubuntu:')
        run: |
          apt-get update
          apt-get install -y curl gnupg lsb-release software-properties-common
          curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
          apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          apt-get update
          apt-get install -y terraform=${{ matrix.tf_version }}

      # Initialize the workspace
      - name: Terraform Init
        working-directory: /workspace/tester
        run: terraform init

      # We only need to run a plan, since there are no resources used in testing
      - name: Terraform Plan
        working-directory: /workspace/tester
        run: terraform plan